//ini_set('memory_limit', '128M'); # unlim -1
$x = memory_get_peak_usage();
$m = (int)ini_get('memory_limit') * 1024 * 1024;
echo $x, ' ', $m, ' ', ini_get('memory_limit')
     ,' ', round($x * 100 / $m,2).'%';
~
declare(ticks=1);

function tick_handler()
{
    echo "Call tick_handler()\n";
}

register_tick_function('tick_handler');

$a = 1; // call tick

if ($a > 0) {
    $a += 2; // call tick
    print($a); // call tick
}
~
$out = '';
$in = ['A', ['x' => 'B', ['y' => 'C'], 'D']];
array_walk_recursive($in, function (&$v, $k) use (&$out) {
    if ('x' === $k) $v = ['W', ['X']];     else
    $out .= $v;
});
array_walk_recursive($in, function (&$v, $k) use (&$out) {
    if ('x' === $k) $v = ['W', ['X']];     else
    $out .= $v;
});
echo $out . "\n\n";

$a = [11];
$b =& $a;
list (&$c) = $b;
$c = 22;

print_r($a);
~
$sock = socket_create(AF_INET6, SOCK_STREAM, SOL_TCP);
if (@socket_connect($sock, '::1', 8000)) {
    socket_write($sock, "GET / HTTP/1.1\r\nHost: 127.0.0.1\r\n\r\n");
    echo socket_read($sock, 2400000);
}
echo socket_strerror(socket_last_error($sock));
socket_close($sock);

~
list($month, $day, $year) = sscanf('Январь 01 2000', "%s %d %d");
echo "$year-$month $day";
~
$php = '<?php
class A
{
    const PUBLIC = 1;
}
use SebastianBergmann\Diff\Differ;
class Gape extends Bolt {}';

//$php = Plan::_g('mvc/earth_c.php');$out = [];

foreach (token_get_all($php, TOKEN_PARSE) as $v) {
  [$k, $v] = is_array($v) ? $v : [0, $v];
  echo token_name($k)." --> '$v'\n";
}
~
$ary = SKY::$dd->_struct('ctry');
print_r($ary);
$ary = get_defined_constants(true);
print_r(array_keys($ary));
print_r($ary['user']);
//print_r($ary);
~
$a = array([1, 3], [22, 5], [3, 1]);

usort($a, function ($a, $b) {
    return $a[0] == $b[0] ? 0 : ($a[0] < $b[0] ? -1 : 1);
});
print_r($a);

$y = 1;
$fn1 = fn($x) => $x + $y; # PHP 7.4
echo 'Arrow func: ' . $fn1(2);

~
$a = [
  '<qq>qq<q>',
  'ку<ку<ы>ы',
  '<ку<ы>ы',
  '<ы>ы',
  '<ы>ы</ы>',
];
foreach ($a as $v) {
  echo "$v => ";
  echo strip_tags($v)."\n";
}
